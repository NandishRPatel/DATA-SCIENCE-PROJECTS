# Creating 8 x 8 matrix A from Poission distribution with lambda parameter 5
A <- matrix(rpois(64,5), 8, 8)
# Creating matrix C
C = A %*% t(A)
# Getting eigenvectors from eig_C
U <- eigen(C)$vectors
# Creating an Identity matrix
I <- diag(nrow = 8)
# Checking if t(U) %*% U is equal to identity matrix
t(U) %*% U == I
# Setting the seed for reproducibility
set.seed(73)
# Cleaning the environment
rm(list=ls())
# Creating 8 x 8 matrix A from Poission distribution with lambda parameter 5
A <- matrix(rpois(64,5), 8, 8)
# Creating matrix C
C = A %*% t(A)
# Getting eigenvectors from eig_C
U <- eigen(C)$vectors
# Creating an Identity matrix
I <- diag(nrow = 8)
# Checking if t(U) %*% U is equal to identity matrix
round(t(U) %*% U) == I
# Setting the seed for reproducibility
set.seed(73)
# Cleaning the environment
rm(list=ls())
# Creating 8 x 8 matrix A from Poission distribution with lambda parameter 5
A <- matrix(rpois(64,5), 8, 8)
# Creating matrix C
C = A %*% t(A)
# Getting eigenvectors from eig_C
U <- eigen(C)$vectors
# Creating an Identity matrix
I <- diag(nrow = 8)
# Checking if t(U) %*% U is equal to identity matrix
all(round(t(U) %*% U) == I)
U
# Setting the seed for reproducibility
set.seed(73)
# Cleaning the environment
rm(list=ls())
# Creating 8 x 8 matrix A from Poission distribution with lambda parameter 5
A <- matrix(rpois(64,5), 8, 8)
# Creating matrix C
C = A %*% t(A)
# Getting eigenvectors from eig_C
U <- eigen(C)$vectors
# Creating an Identity matrix
I <- diag(nrow = 8)
# Checking if t(U) %*% U is equal to identity matrix
cat("Is t(U) %*% U equal to I? : ", all(round(t(U) %*% U) == I))
# Setting the seed for reproducibility
set.seed(73)
# Cleaning the environment
rm(list=ls())
# Creating 8 x 8 matrix A from Poission distribution with lambda parameter 5
A <- matrix(rpois(64,5), 8, 8)
# Creating matrix C
C = A %*% t(A)
# Getting eigen properties of C
eig_C = eigen(C)
# Getting eigenvectors from eig_C
U <- eig_C$vectors
# Creating a diagonal matrix with eigenvalues
lambda = diag(eig_C$values)
C == U %*% lambda %*% t(U)
U %*% lambda %*% t(U)
C
all.equal(C, U %*% lambda %*% t(U))
all(C, U %*% lambda %*% t(U))
# Setting the seed for reproducibility
set.seed(73)
# Cleaning the environment
rm(list=ls())
# Creating 8 x 8 matrix A from Poission distribution with lambda parameter 5
A <- matrix(rpois(64,5), 8, 8)
# Creating matrix C
C = A %*% t(A)
# Getting eigen properties of C
eig_C = eigen(C)
# Getting eigenvectors from eig_C
U <- eig_C$vectors
# Creating a diagonal matrix with eigenvalues
lambda = diag(eig_C$values)
all.equal(C, U %*% lambda %*% t(U))
# Setting the seed for reproducibility
set.seed(73)
# Cleaning the environment
rm(list=ls())
# Creating 8 x 8 matrix A from Poission distribution with lambda parameter 5
A <- matrix(rpois(64,5), 8, 8)
# Creating matrix C
C = A %*% t(A)
# Getting eigen properties of C
eig_C = eigen(C)
# Getting eigenvectors from eig_C
U <- eig_C$vectors
# Creating a diagonal matrix with eigenvalues
lambda = diag(eig_C$values)
# Verifying the SVD of C
cat("Verified SVD for C? : ", all.equal(C, U %*% lambda %*% t(U)))
M <- matrix(c(-3.666667, -2.1666667, 7, 0.333333, 2.833333, 1,
-0.666667, -3.166667, -1, 3.333333, -1.166667, -5,
5.333333, 4.833333, -6, -4.666667, -1.166667, 4),
nrow = 6, ncol = 3, byrow = T)
M
SSCP <- t(M) %*% M
SSCP
# Assume that we have already calculated the matrix M
M <- matrix(c(-3.666667, -2.1666667, 7, 0.333333, 2.833333, 1, -0.666667, -3.166667, -1, 3.333333, -1.166667, -5, 5.333333, 4.833333, -6, -4.666667, -1.166667, 4), nrow = 6, ncol = 3,
byrow = T)
# SSCP as mentioned in the assignment
SSCP <- t(M) %*% M
# Printing the SSCP
cat("SSCP matrix is : \n")
SSCP
# Assume that we have already calculated the matrix M
S <- matrix(c(-15.066667, -7.666667, -18.4, -7.666667, -9.766667, -7.4,
-18.4, -7.4, -25.6), nrow = 3, ncol = 3, byrow = T)
diagonal <- diag(S)
diagonal
D <- matrix(rep(0, 9), ncol = 3, nrow = 3)
D
diag(D) <- diagonal
D
diagonal <- (diag(S)) ^ (-1/2)
diagonal
diagonal <- 1/sqrt(diag(S))
diagonal
diagonal <- inv(sqrt(diag(S)))
diagonal <- solve(sqrt(diag(S)))
diagonal
diagonal <- diag(S)
diagonal
2^2
diagonal <- sqrt(diag(S))
diagonal
diagonal <- sqrt(diag(S), 2)
diagonal <- sqrt(diag(S), 1)
c()
?c()
diagonal <- diag(S) ^ (0.5)
# Assume that we have already calculated the matrix M
S <- matrix(c(15.066667, 7.666667, -18.4, 7.666667, 9.766667, -7.4,
-18.4, -7.4, 25.6), nrow = 3, ncol = 3, byrow = T)
diagonal <- diag(S) ^ (0.5)
diagonal
# Assume that we have already calculated the matrix M
S <- matrix(c(15.066667, 7.666667, -18.4, 7.666667, 9.766667, -7.4,
-18.4, -7.4, 25.6), nrow = 3, ncol = 3, byrow = T)
diagonal <- 1/(diag(S) ^ (0.5))
diagonal
D <- matrix(rep(0, 9), ncol = 3, nrow = 3)
D
diag(D) <- diagonal
D
D %*% S %*% D
# Assume that we have already calculated the matrix M
S <- matrix(c(15.066667, 7.666667, -18.4, 7.666667, 9.766667, -7.4,
-18.4, -7.4, 25.6), nrow = 3, ncol = 3, byrow = T)
# Getting diagonal and taking inverse of root
diagonal <- 1/(diag(S) ^ (0.5))
# Creating a matrix D
D <- matrix(rep(0, 9), ncol = 3, nrow = 3)
# Setting the diagonal of D
diag(D) <- diagonal
# Printing the result
D %*% S %*% D
# Getting diagonal and taking inverse of root
diagonal <- 1/(diag(S) ^ (0.5))
# Creating a matrix D
D <- matrix(rep(0, 9), ncol = 3, nrow = 3)
# Setting the diagonal of D
diag(D) <- diagonal
diagonal <- 1/(diag(S) ^ (0.5))
D <- matrix(rep(0, 9), ncol = 3, nrow = 3)
diag(D) <- diagonal
?factanal
setwd("D:/DATA-SCIENCE-PROJECTS/BANK MARKETING DATA")
setwd("D:/DATA-SCIENCE-PROJECTS/BANK MARKETING DATA")
data = read.csv("/DATA/X_train_SMOTE.csv")
# Reading the data
## Training data - Covariates
X_train_SMOTE = read.csv("./DATA/X_train_SMOTE.csv")
## Training data - Response Variable
y_train_SMOTE = read.csv("./DATA/y_train_SMOTE.csv")
head(X_train_SMOTE)
temp <- lapply(names(X_train_SMOTE[-1]),
function(x) ifelse(X_train_SMOTE[x] == 1, x, NA))
head(temp)
head(X_train_SMOTE)
# Reading the data
## Training data - Covariates
X_train_SMOTE = read.csv("./DATA/X_train_SMOTE.csv")
## Training data - Response Variable
y_train_SMOTE = read.csv("./DATA/y_train_SMOTE.csv")
head(X_train_SMOTE)
names(X_train_SMOTE)
names(X_train_SMOTE)[7:17]
X_train_SMOTE[7:17]
temp <- X_train_SMOTE[7:17]
factor(temp %*% 1:ncol(temp),
labels = c("Level1", colnames(temp)))
temp <- as.matrix(X_train_SMOTE[7:17])
factor(temp %*% 1:ncol(temp),
labels = c("Level1", colnames(temp)))
job <- factor(temp %*% 1:ncol(temp),
labels = c("Level1", colnames(temp)))
head(job)
head(job, 10)
head(job, 20)
head(job, 40)
levels(job)
job <- factor(temp %*% 1:ncol(temp),
labels = c("job_admin", colnames(temp)))
levels(job)
job[22]
## Job
job_cols <- as.matrix(X_train_SMOTE[7:17])
job_cat <- factor(job_cols %*% 1:ncol(job_cols),
labels = c("job_admin", colnames(job_cols)))
X_train_SMOTE[18:20]
head(X_train_SMOTE[18:20])
marital_cols <- as.matrix(X_train_SMOTE[18:19])
marital_cat <- factor(marital_cols %*% 1:ncol(marital_cols),
labels = c("marital_divorced", colnames(marital_cols)))
head(marital_cat)
head(marital_cat, 10)
head(marital_cat, 20)
as.matrix(X_train_SMOTE[19:21])
as.matrix(X_train_SMOTE[18:19])
as.matrix(X_train_SMOTE[17:19])
as.matrix(X_train_SMOTE[20:22])
# Education
education_cols <- as.matrix(X_train_SMOTE[20:22])
education_cat <- factor(education_cols %*% 1:ncol(education_cols),
labels = c("education_primary", colnames(education_cols)))
head(education_cat, 20)
as.matrix(X_train_SMOTE[23:24])
as.matrix(X_train_SMOTE[22:24])
as.matrix(X_train_SMOTE[23:34])
as.matrix(X_train_SMOTE[23:33])
names(X_train_SMOTE[23:33])
# Month
month_cols <- as.matrix(X_train_SMOTE[23:33])
month_cat <- factor(month_cols %*% 1:ncol(month_cols),
labels = c("month_apr", colnames(month_cols)))
head(month_cat, 20)
head(month_cat, 16)
as.matrix(X_train_SMOTE[34:35])
as.matrix(X_train_SMOTE[34:36])
as.matrix(X_train_SMOTE[34:36])
# Poutcome
poutcome_cols <- as.matrix(X_train_SMOTE[34:36])
poutcome_cat <- factor(poutcome_cols %*% 1:ncol(poutcome_cols),
labels = c("poutcome_failure", colnames(poutcome_cols)))
head(poutcome_cat, 10)
head(poutcome_cat, 20)
X_train_SMOTE[37:39]
X_train_SMOTE[37:38]
head(X_train_SMOTE[37:38])
# Contact
contact_cols <- as.matrix(X_train_SMOTE[37:38])
contact_cat <- factor(contact_cols %*% 1:ncol(contact_cols),
labels = c("contact_cellular", colnames(contact_cols)))
head(X_train_SMOTE[39:41])
X_train_SMOTE
names(X_train_SMOTE)
# Adding the newly created categorical variables to the dataframe
new_data[c("job", "marital", "education",
"month", "poutcome", "contact")] <-
c(job_cat, marital_cat, education_cat, month_cat, poutcome_cat,
contact_cat)
# Creating a new dataframe
new_data <- X_train_SMOTE[1:6]
# Adding the newly created categorical variables to the dataframe
new_data[c("job", "marital", "education",
"month", "poutcome", "contact")] <-
c(job_cat, marital_cat, education_cat, month_cat, poutcome_cat,
contact_cat)
head(new_data)
head(job_cat)
head(new_data)
head(new_data["job"])
new_data_2 = X_train_SMOTE[1:6]
new_data_2["job"] = factor(job_cat)
head(new_data_2)
# Creating a new dataframe
new_data <- X_train_SMOTE[1:6]
# Adding the newly created categorical variables to the dataframe
new_data[c("job", "marital", "education",
"month", "poutcome", "contact")] <-
factor(c(job_cat, marital_cat, education_cat, month_cat, poutcome_cat,
contact_cat))
head(new_data)
temp <- c(job_cat, marital_cat, education_cat, month_cat, poutcome_cat,
contact_cat)
temp
?c()
temp <- factor(c(job_cat, marital_cat, education_cat, month_cat, poutcome_cat,
contact_cat))
temp
# Creating a new dataframe
new_data <- X_train_SMOTE[1:6]
# Adding the newly created categorical variables to the dataframe
new_data["job"] <- factor(job_cat)
new_data["marital"] <- factor(marital_cat)
new_data["education"] <- factor(education_cat)
new_data["month"] <- factor(month_cat)
new_data["poutcome"] <- factor(poutcome_cat)
new_data["contact"] <- factor(contact_cat)
head(new_data)
for (i in job_cat){
print(i)
}
# Reading the data
## Training data - Covariates
X_train_SMOTE = read.csv("./DATA/X_train_SMOTE.csv")
## Training data - Response Variable
y_train_SMOTE = read.csv("./DATA/y_train_SMOTE.csv")
# Need to convert the dummy variables into one categorical variable
## Job
job_cols <- as.matrix(X_train_SMOTE[7:17])
job_cat <- factor(job_cols %*% 1:ncol(job_cols),
labels = c("job_admin", colnames(job_cols)))
## Marital status
marital_cols <- as.matrix(X_train_SMOTE[18:19])
marital_cat <- factor(marital_cols %*% 1:ncol(marital_cols),
labels = c("marital_divorced", colnames(marital_cols)))
## Education
education_cols <- as.matrix(X_train_SMOTE[20:22])
education_cat <- factor(education_cols %*% 1:ncol(education_cols),
labels = c("education_primary", colnames(education_cols)))
## Month
month_cols <- as.matrix(X_train_SMOTE[23:33])
month_cat <- factor(month_cols %*% 1:ncol(month_cols),
labels = c("month_apr", colnames(month_cols)))
## Poutcome
poutcome_cols <- as.matrix(X_train_SMOTE[34:36])
poutcome_cat <- factor(poutcome_cols %*% 1:ncol(poutcome_cols),
labels = c("poutcome_failure", colnames(poutcome_cols)))
## Contact
contact_cols <- as.matrix(X_train_SMOTE[37:38])
contact_cat <- factor(contact_cols %*% 1:ncol(contact_cols),
labels = c("contact_cellular", colnames(contact_cols)))
# Creating a new dataframe
new_data <- X_train_SMOTE[1:6]
# Adding the newly created categorical variables to the dataframe
new_data["job"] <- factor(job_cat)
new_data["marital"] <- factor(marital_cat)
new_data["education"] <- factor(education_cat)
new_data["month"] <- factor(month_cat)
new_data["poutcome"] <- factor(poutcome_cat)
new_data["contact"] <- factor(contact_cat)
gsub("job_", "", job_cat)
# Creating a new dataframe
new_data <- X_train_SMOTE[1:6]
# Adding the newly created categorical variables to the dataframe
new_data["job"] <- factor(gsub("job_", "", job_cat))
new_data["marital"] <- factor(gsub("marital_", "", marital_cat))
new_data["education"] <- factor(gsub("education_", "", education_cat))
new_data["month"] <- factor(gsub("month_", "", month_cat))
new_data["poutcome"] <- factor(gsub("poutcome_", "", poutcome_cat))
new_data["contact"] <- factor(gsub("contact_", "", contact_cat))
head(new_data)
head(y_train_SMOTE)
levels(y_train_SMOTE)
# Adding response variable to the dataframe
new_data["subscribed"] <- factor(y_train_SMOTE)
levels(new_data["subscribed"])
new_data["subscribed"]
factor(y_train_SMOTE)
y_train_SMOTE
as.factor(y_train_SMOTE)
# Adding response variable to the dataframe
new_data["subscribed"] <- factor(y_train_SMOTE, levels = c("0", "1"))
levels(new_data["subscribed"])
head(new_data["subscribed"])
# Creating a new dataframe
new_data <- X_train_SMOTE[1:6]
factor(y_train_SMOTE)
y_train_SMOTE
# Adding response variable to the dataframe
new_data["subscribed"] <- y_train_SMOTE
# Adding response variable to the dataframe
new_data["subscribed"] <- y_train_SMOTE[2:, :]
y_train_SMOTE[2:]
y_train_SMOTE[]
y_train_SMOTE[c(1, 100)]
y_train_SMOTE[c(1, 100), c(1,2)]
# Reading the data
## Training data - Covariates
X_train_SMOTE = read.csv("./DATA/X_train_SMOTE.csv")
## Training data - Response Variable
y_train_SMOTE = read.csv("./DATA/y_train_SMOTE.csv", header = T)
View(y_train_SMOTE)
View(X_train_SMOTE)
# Reading the data
## Training data - Covariates
X_train_SMOTE = read.csv("./DATA/X_train_SMOTE.csv", header = T)
# Reading the data
## Training data - Covariates
X_train_SMOTE = read.csv("./DATA/X_train_SMOTE.csv", header = T)
## Training data - Response Variable
y_train_SMOTE = read.csv("./DATA/y_train_SMOTE.csv", header = T)
View(y_train_SMOTE)
View(X_train_SMOTE)
# Reading the data
## Training data - Covariates
X_train_SMOTE = read.csv("./DATA/X_train_SMOTE.csv")
## Training data - Response Variable
y_train_SMOTE = read.csv("./DATA/y_train_SMOTE.csv")
## Training data - Response Variable
y_train_SMOTE = read.csv("./DATA/y_train_SMOTE.csv", header = F)
## Job
job_cols <- as.matrix(X_train_SMOTE[7:17])
job_cat <- factor(job_cols %*% 1:ncol(job_cols),
labels = c("job_admin", colnames(job_cols)))
## Marital status
marital_cols <- as.matrix(X_train_SMOTE[18:19])
marital_cat <- factor(marital_cols %*% 1:ncol(marital_cols),
labels = c("marital_divorced", colnames(marital_cols)))
## Education
education_cols <- as.matrix(X_train_SMOTE[20:22])
education_cat <- factor(education_cols %*% 1:ncol(education_cols),
labels = c("education_primary", colnames(education_cols)))
## Month
month_cols <- as.matrix(X_train_SMOTE[23:33])
month_cat <- factor(month_cols %*% 1:ncol(month_cols),
labels = c("month_apr", colnames(month_cols)))
## Poutcome
poutcome_cols <- as.matrix(X_train_SMOTE[34:36])
poutcome_cat <- factor(poutcome_cols %*% 1:ncol(poutcome_cols),
labels = c("poutcome_failure", colnames(poutcome_cols)))
## Contact
contact_cols <- as.matrix(X_train_SMOTE[37:38])
contact_cat <- factor(contact_cols %*% 1:ncol(contact_cols),
labels = c("contact_cellular", colnames(contact_cols)))
# Creating a new dataframe
new_data <- X_train_SMOTE[1:6]
# Adding the newly created categorical variables to the dataframe
new_data["job"] <- factor(gsub("job_", "", job_cat))
new_data["marital"] <- factor(gsub("marital_", "", marital_cat))
new_data["education"] <- factor(gsub("education_", "", education_cat))
new_data["month"] <- factor(gsub("month_", "", month_cat))
new_data["poutcome"] <- factor(gsub("poutcome_", "", poutcome_cat))
## Job
job_cols <- as.matrix(X_train_SMOTE[7:17])
job_cat <- factor(job_cols %*% 1:ncol(job_cols),
labels = c("job_admin", colnames(job_cols)))
## Marital status
marital_cols <- as.matrix(X_train_SMOTE[18:19])
marital_cat <- factor(marital_cols %*% 1:ncol(marital_cols),
labels = c("marital_divorced", colnames(marital_cols)))
## Education
education_cols <- as.matrix(X_train_SMOTE[20:22])
education_cat <- factor(education_cols %*% 1:ncol(education_cols),
labels = c("education_primary", colnames(education_cols)))
## Month
month_cols <- as.matrix(X_train_SMOTE[23:33])
month_cat <- factor(month_cols %*% 1:ncol(month_cols),
labels = c("month_apr", colnames(month_cols)))
## Poutcome
poutcome_cols <- as.matrix(X_train_SMOTE[34:36])
poutcome_cat <- factor(poutcome_cols %*% 1:ncol(poutcome_cols),
labels = c("poutcome_failure", colnames(poutcome_cols)))
## Contact
contact_cols <- as.matrix(X_train_SMOTE[37:38])
contact_cat <- factor(contact_cols %*% 1:ncol(contact_cols),
labels = c("contact_cellular", colnames(contact_cols)))
# Creating a new dataframe
new_data <- X_train_SMOTE[1:6]
# Adding the newly created categorical variables to the dataframe
new_data["job"] <- factor(gsub("job_", "", job_cat))
new_data["marital"] <- factor(gsub("marital_", "", marital_cat))
new_data["education"] <- factor(gsub("education_", "", education_cat))
new_data["month"] <- factor(gsub("month_", "", month_cat))
new_data["poutcome"] <- factor(gsub("poutcome_", "", poutcome_cat))
# Adding response variable to the dataframe
new_data["subscribed"] <- factor(y_train_SMOTE)
head(new_data["subscribed"])
y_train_SMOTE
# Adding response variable to the dataframe
new_data["subscribed"] <- y_train_SMOTE
head(new_data["subscribed"])
# Adding response variable to the dataframe
new_data["subscribed"] <- as.factor(y_train_SMOTE)
head(new_data["subscribed"])
class(y_train_SMOTE)
class(y_train_SMOTE[0])
y_train_SMOTE[1]
y_train_SMOTE[1,1]
class(y_train_SMOTE[1,1])
names(y_train_SMOTE)
# Adding response variable to the dataframe
new_data["subscribed"] <- factor(y_train_SMOTE["V1"])
head(new_data["subscribed"])
# Adding response variable to the dataframe
new_data["subscribed"] <- y_train_SMOTE
head(new_data["subscribed"])
new_data["subscribed"] <- as.factor(new_data["subscribed"])
head(new_data)
class(new_data["subscribed"])
# Adding response variable to the dataframe
new_data["subscribed"] <- y_train_SMOTE["V1"]
class(new_data["subscribed"])
# Adding response variable to the dataframe
new_data["subscribed"] <- y_train_SMOTE
class(new_data["subscribed"])
View(y_train_SMOTE)
